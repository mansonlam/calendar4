@model Calendar.Models.Attachment

@inject Calendar.Controllers.AppSettingsController appsettings

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form>
<!--<form asp-action="Create">-->
    <div class="form-horizontal">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label id="attachment" class="col-md-2 control-label" data-toggle="tooltip" data-placement="top" title="File">File</label>
            <div class="col-md-10">
                <input type="file" class="file" id="idFile" name="AttachFile" multiple>
                <div id="kv-error-2" class="alert alert-danger fade in" style="margin-top:10px;display:none"></div>
            </div>
        </div>
        <!--<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>-->
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script type="text/javascript" src="~/lib/jquery/dist/jquery.js">
    $(document).ready(function () {

        $("#idFile").fileinput({
            theme: "explorer",
            uploadUrl: '@Url.Action("Upload2", "Attachments")', // server upload action
            uploadAsync: true,
            dropZoneEnabled: false, // disable drag and drop file function
            maxFileCount: 5,
            overwriteInitial: false,
            //elErrorContainer: 'kv-error-1',
            previewFileIcon: '<i class="fa fa-file"></i>',
            initialPreviewAsData: true, // defaults markup
            fileActionSettings: {
                removeTitle: 'Remove file from list',
                showZoom: false
            },
            layoutTemplates: {
                preview: '<div class="file-preview {class}">\n' +
                '    <div class="{dropClass}">\n' +
                '    <table class="table table-bordered table-hover"><tbody class="file-preview-thumbnails">\n' +
                '    </tbody></table>\n' +
                '    <div class="clearfix"></div>' +
                '    <div class="file-preview-status text-center text-success"></div>\n' +
                '    <div class="kv-fileinput-error"></div>\n' +
                '    </div>\n' +
                '</div>'
            },
            uploadExtraData: function (previewId, index) {
                var obj = {};
                if (previewId == undefined) {
                    return obj;
                } else {
                    obj = { EventID: "1085", redir: "null" };
                }
                return obj;
            },
            allowedFileExtensions: ["jpg", "png", "gif", "pdf", "doc", "docx", "xls", "xlsx", "ppt", "pptx", "txt", "log", "zip", "7z"],
            preferIconicPreview: true, // this will force thumbnails to display icons for following file extensions
            previewFileIconSettings: { // configure your icon file extensions
                'doc': '<i class="fa fa-file-word-o text-primary"></i>',
                'xls': '<i class="fa fa-file-excel-o text-success"></i>',
                'ppt': '<i class="fa fa-file-powerpoint-o text-danger"></i>',
                'pdf': '<i class="fa fa-file-pdf-o text-danger"></i>',
                'zip': '<i class="fa fa-file-archive-o text-muted"></i>',
                'htm': '<i class="fa fa-file-code-o text-info"></i>',
                'txt': '<i class="fa fa-file-text-o text-info"></i>',
                'mov': '<i class="fa fa-file-movie-o text-warning"></i>',
                'mp3': '<i class="fa fa-file-audio-o text-warning"></i>',
                // note for these file types below no extension determination logic
                // has been configured (the keys itself will be used as extensions)
                'jpg': '<i class="fa fa-file-photo-o text-danger"></i>',
                'gif': '<i class="fa fa-file-photo-o text-muted"></i>',
                'png': '<i class="fa fa-file-photo-o text-primary"></i>'
            },
            previewFileExtSettings: { // configure the logic for determining icon file extensions
                'doc': function (ext) {
                    return ext.match(/(doc|docx)$/i);
                },
                'xls': function (ext) {
                    return ext.match(/(xls|xlsx)$/i);
                },
                'ppt': function (ext) {
                    return ext.match(/(ppt|pptx)$/i);
                },
                'zip': function (ext) {
                    return ext.match(/(zip|rar|tar|gzip|gz|7z)$/i);
                },
                'htm': function (ext) {
                    return ext.match(/(htm|html)$/i);
                },
                'txt': function (ext) {
                    return ext.match(/(txt|ini|csv|java|php|js|css)$/i);
                },
                'mov': function (ext) {
                    return ext.match(/(avi|mpg|mkv|mov|mp4|3gp|webm|wmv)$/i);
                },
                'mp3': function (ext) {
                    return ext.match(/(mp3|wav)$/i);
                },
            }
        });

    });

</script>